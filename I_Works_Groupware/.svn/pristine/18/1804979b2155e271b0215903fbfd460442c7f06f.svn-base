<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>    
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>

      <div class="support-chat-container">
      <sec:authentication property="principal.emp.empNo" var="empNo"/>
      <!-- 채팅방 내부 -->
        <div class="container-fluid support-chat">
          <div class="card bg-white">
            <div class="card-header d-flex flex-between-center px-4 py-3 border-bottom">
              <h5 class="mb-0 d-flex align-items-center gap-2" id="titleBox2">채팅방 제목
              	<span class="fa-solid fa-circle text-success fs--3"></span>
              </h5>
            	<div class="btn-reveal-trigger">
            		 <!-- 검색, 페이징 설정 -->
				    <button class="btn btn-link p-0 dropdown-toggle dropdown-caret-none transition-none d-flex" type="button" id="support-chat-dropdown" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent">
				        <span class="fas fa-ellipsis-h text-900"></span>
				    </button>
				    <div class="dropdown-menu dropdown-menu-end py-2" aria-labelledby="support-chat-dropdown">
				    <!-- 채팅폼 시작 -->
<!-- 				    	 <div class="search-box"> -->
<!-- 					      <form class="position-relative" data-bs-toggle="search" data-bs-display="static"> -->
<!-- 					        <input class="form-control search-input search" type="search" placeholder="" aria-label="Search"> -->
<!-- 					        <span class="fas fa-search search-box-icon"></span> -->
<!-- 					      </form> -->
<!-- 					      </div> -->
					<!-- 채팅 폼 끝 -->
				        <h6 class="dropdown-header">채팅방 목록</h6>
				        <div id="chatUserList" ></div>
				    </div>
				</div>
            </div>
            <div class="card-body chat p-0">
              <div class="d-flex flex-column-reverse scrollbar h-100 p-3">
              <!-- 채팅방 채팅 부분 -->
                <div class="text-end mt-6" id="chatListContainer">
				</div>
				<!-- 채팅부분 끝 -->
                <div class="text-center mt-auto">
<!--                   <div class="avatar avatar-3xl status-online"><img class="rounded-circle border border-3 border-white" src="assets/img/team/30.webp" alt="" /></div> -->
<!--                   <h5 class="mt-2 mb-3">Eric</h5> -->
<!--                   <p class="text-center text-black mb-0">Ask us anything – we’ll get back to you here or by email within 24 hours.</p> -->
                </div>
              </div>
            </div>
            <div class="card-footer d-flex align-items-center gap-2 border-top ps-3 pe-4 py-3">
              <div class="d-flex align-items-center flex-1 gap-3 border rounded-pill px-4">
                <input class="form-control outline-none border-0 flex-1 fs--1 px-0" id="messageInput2" type="text" placeholder="Write message" />
                <label class="btn btn-link d-flex p-0 text-500 fs--1 border-0" for="supportChatPhotos"><span class="fa-solid fa-image"></span></label>
                <input class="d-none" type="file" accept="image/*" id="supportChatPhotos" />
                <label class="btn btn-link d-flex p-0 text-500 fs--1 border-0" for="supportChatAttachment"> <span class="fa-solid fa-paperclip"></span></label>
                <input class="d-none" type="file" id="supportChatAttachment" />
              </div>
              <!-- 입력버튼 -->
              <button class="btn p-0 border-0 send-btn" id="sendMessageBtn2"><span class="fa-solid fa-paper-plane fs--1"></span></button>
            </div>
          </div>
        </div>
		<!-- 채팅방 내부 끝 -->
        <button class="btn p-0 border border-200 btn-support-chat" id="chatIcon"><span class="fs-0 btn-text text-primary text-nowrap">채팅</span><span class="fa-solid fa-circle text-success fs--1 ms-2"></span><span class="fa-solid fa-chevron-down text-primary fs-1"></span></button>
      </div>
      
<script>
var empNo = "${empNo}";
//websocket을 지정한 URL로 연결
document.getElementById("chatIcon").addEventListener("click", function () {
// 	function formatDateTime(date) {
// 	    const options = {
// 	        month: '2-digit', // 월 (2자리 숫자)
// 	        day: '2-digit',   // 일 (2자리 숫자)
// 	        hour: '2-digit',  // 시간 (2자리 숫자)
// 	        minute: '2-digit', // 분 (2자리 숫자)
// 	        second: '2-digit'  // 초 (2자리 숫자)
// 	    };

// 	    return date.toLocaleString('en-US', options);
// 	}
	
	// 클릭 이벤트 처리
    
//     var socket = new WebSocket("ws://localhost:80/chat");

    // 웹 소켓 연결이 열리면 호출되는 함수
    chatSocket.onopen = function (event) {
        console.log("WebSocket 연결완료.");
    };

    // 메시지를 받았을 때 호출되는 함수
    chatSocket.onmessage = function (event) {
        var message = event.data;
        console.log("서버로부터 메시지를 받았습니다: " + message);
        // 메시지 처리 로직을 추가
        var messageData = JSON.parse(message);
        var chatMessage = messageData.message;
        var crNo = messageData.crNo;
        var sender = messageData.sender;

        // chatMessageBody 요소 가져오기
        var chatListContainer = document.getElementById("chatListContainer");
        const date = new Date();
        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: 'numeric', minute: 'numeric', hour12: true };
        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);
        // 새로운 채팅 메시지를 HTML로 만들어 추가
        var html = "";
        if (sender == empNo) {
        	console.log("empNo :"+empNo);
            html += '<div class="d-flex chat-message"  style = "flex-direction: column;">';
            html += '    <div class="d-flex mb-2 justify-content-end flex-1">';
            html += '        <div class="w-100 w-xxl-75">';
            html += '            <div class="d-flex flex-end-center hover-actions-trigger">';
            html += '                <div class="chat-message-content me-2">';
            html += '                    <div class="mb-1 sent-message-content light bg-primary rounded-2 p-3 text-white">';
            html += '                        <p class="mb-0">' + chatMessage + '</p>';
            html += '                    </div>';
            html += '            		<div class="text-end">';
            html += '                		<p class="mb-0 fs--2 text-600 fw-semi-bold">' + formattedDate + '</p>';
            html += '           		 </div>';
            html += '                </div>';
            html += '            </div>';
            html += '        </div>';
            html += '    </div>';
            html += '</div>';
        } else {
            html += '<div class="d-flex chat-message"  style = "flex-direction: column;">';
            html += '    <div class="d-flex mb-2 flex-1">';
            html += '        <div class="w-100 w-xxl-75">';
            html += '            <div class="d-flex hover-actions-trigger">';
            html += '                <div class="avatar avatar-m me-3 flex-shrink-0" data-empno="' + sender + '"><img class="rounded-circle" src="..' + sender + '.jpg" alt=""></div>';
            html += '                <div class="chat-message-content received me-2">';
            html += '                    <div class="mb-1 received-message-content border rounded-2 p-3">';
            html += '                        <p class="mb-0">' + chatMessage + '</p>';
            html += '                    </div>';
            html += '                </div>';
            html += '            </div>';
            html += '            <div class="text-end">';
            html += '            	<p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">' + formattedDate + '</p>';
            html += '            </div>';
            html += '        </div>';
            html += '    </div>';
            html += '</div>';
        }

        // chatMessageBody에 메시지 추가
        chatListContainer.innerHTML += html;
		// chatMessageBody.append();
     	// 스크롤을 가장 아래로 내림
        scrollToBottom();
    };

    function scrollToBottom() {
        var chatListContainer = document.getElementById("chatListContainer");
        chatListContainer.scrollTop = chatListContainer.scrollHeight;
    };
    
    // 에러가 발생했을 때 호출되는 함수
    chatSocket.onerror = function (event) {
        console.error("WebSocket 오류 발생: " + event);
        
    };

    // 웹 소켓 연결이 닫혔을 때 호출되는 함수
    chatSocket.onclose = function (event) {
        if (event.wasClean) {
            console.log("WebSocket 연결이 정상적으로 닫혔습니다.");
        } else {
            console.error("WebSocket 연결이 오류로 인해 닫혔습니다.");
        }
    };

    // 페이지를 닫을 때 웹 소켓 연결을 닫음
    window.onbeforeunload = function () {
    	chatSocket.close();
    };
    
    // 메세지 보내기
    $(document).on('click', '#sendMessageBtn2', function(){
    	var message = document.getElementById("messageInput2").value;
		var crNo = $("#chatMsgBoxesCrNo2").val();	// 저장된 crNo를 가져옴
        console.log("sendCrNo : " + crNo);
        var data = {
            message: message,
            crNo: crNo
        };
        chatSocket.send(JSON.stringify(data)); // 메시지와 crNo를 JSON 형태로 전송
        document.getElementById("messageInput2").value = "";
    });
    
    $(document).on('click', '#iconSendMsgBtn', function(){
    	var message = "메세지 전송함";
    	console.log(message);
    	chatSocket.send(message);
    });
    
    $(document).on('click', '#chatIcon', function () {
        console.log("chatIcon 클릭됨");
        $.ajax({
            url: "/chatTiles.do", // 서버 엔드포인트
            type: "POST",
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                console.log("data :", data);

                var chatRoomDtlList = data.chatRoomDtlList;
                var chatuser = data.chatuser;
                var chatListContainer = $("#chatListContainer");
                var html = "";

                
                
                if (chatRoomDtlList && chatRoomDtlList.length > 0) {
                	$("#titleBox2").text(chatRoomDtlList[0].crcmTitle);
                	
                	$.each(chatRoomDtlList, function(index, chatRoomDtl) {
                		html += '<div class="d-flex chat-message"  style = "flex-direction: column;">';
                	    if (empNo == chatRoomDtl.chasenderEmpno) {
                	    	html += '<div class="d-flex mb-2 justify-content-end flex-1">';
                	        html += '<div class="w-100 w-xxl-75">';
                	        html += '<div class="d-flex flex-end-center hover-actions-trigger">';
                	        html += '<div class="chat-message-content me-2">';
                	        html += '<div class="mb-1 sent-message-content light bg-primary rounded-2 p-3 text-white">';
                	        html += '<p class="mb-0">' + chatRoomDtl.chatMsg + '</p>';
                	        html += '</div>';
                	        html += '</div>';
                	        html += '<div class="text-end">';
                	        html += '<p class="mb-0 fs--2 text-600 fw-semi-bold">' + chatRoomDtl.chatDate + '</p>';
                	        html += '</div>';
                	        html += '</div>';
                	        html += '</div>';
                	    } else {
                	    	html += '<div class="d-flex mb-2 flex-1">';
                	        html += '<div class="w-100 w-xxl-75">';
                	        html += '<div class="d-flex hover-actions-trigger">';
                	        html += '<div class="avatar avatar-m me-3 flex-shrink-0" data-crno="' + chatRoomDtl.crNo + '">';
                	        html += '<img class="rounded-circle" src="..' + chatRoomDtl.empPhoto + '" alt="">';
                	        html += '</div>';
                	        html += '<div class="chat-message-content received me-2">';
                	        html += '<div class="mb-1 received-message-content border rounded-2 p-3">';
                	        html += '<p class="mb-0">' + chatRoomDtl.chatMsg + '</p>';
                	        html += '</div>';
                	        html += '<p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">' + chatRoomDtl.chatDate + '</p>';
                	        html += '</div>';
                	        html += '</div>';
                	        html += '</div>';
                	    }
                	    html += '</div>';
                	    html += "<input type='hidden' name='chatMsgBoxesCrNo2' id='chatMsgBoxesCrNo2' value='"+chatRoomDtl.crNo+"'/>";
                    });
                } else {
                	html = '<p>채팅이 아직 없네요...</p>';
                	html += "<input type='hidden' name='chatMsgBoxesCrNo2' id='chatMsgBoxesCrNo2' value='"+chatRoomDtl.crNo+"'/>";
                }
                chatListContainer.html(html);
            },
            error: function (error) {
                console.error("채팅 아이콘 클릭 시 오류 발생: " + error);
            }
        });
    });


    document.getElementById("support-chat-dropdown").addEventListener("click", function () {
       // chatTilesList.do (endPoint)
       fetch("/chatTilesUserList.do")
           .then(response => response.json()) 
           .then(data => {
        	   var chatUserListDiv = document.getElementById("chatUserList");
        	   chatUserListDiv.innerHTML = "";

        	   data.forEach(userList => {
        	       var a = document.createElement("a");
        	       a.className = "dropdown-item chatName";
        	       a.href = "#";
        	       a.textContent = userList.empName;
        	       console.log("empName: " + userList.empName);

        	       // 여기에서 empNo를 가져와야 합니다.
        	       var empNo = userList.id;
        	       console.log("empNo: " + empNo);
					
        	       a.setAttribute("data-empNo", empNo);

        	       a.style.color = "skyblue";
        	       a.style.fontSize = "13px";

        	       chatUserListDiv.appendChild(a);
        	   });

        	   chatUserListDiv.style.overflowY = "auto";
        	   chatUserListDiv.style.maxHeight = "250px";
           })
           .catch(error => {
               console.error("채팅방 목록을 불러오는 중 오류가 발생했습니다.", error);
        });
    });
    document.getElementById("chatUserList").addEventListener("click", function (event) {
        if (event.target.tagName === "A") {
            var empNo = event.target.getAttribute("data-empNo");

            $.ajax({
                type: "POST",
                url: "/chatIconDetail",
                contentType: "application/json",
                data: JSON.stringify({ empNo: empNo }),
                success: function (response) {
                    console.log("받아온 채팅방 정보: ", response);

                    var chatRoomDtlList = response;
                    console.log("받아온 채팅방 chatRoomDtlList: ", chatRoomDtlList);

                    if (chatRoomDtlList != null && chatRoomDtlList.length > 0) {
                        $("#titleBox2").text(chatRoomDtlList[0].crcmTitle);

                        var html = ""; // chatHtml 초기화

                        $.each(chatRoomDtlList, function (index, chatRoomDtl) {
                            html += '<div class="d-flex chat-message" style="flex-direction: column;">';

                            if (chatRoomDtl.chatMsg != null) {
                                // chatRoomDtl.chatMsg가 null이 아닐 때만 채팅 내용 출력
                                if (chatRoomDtl.chatuser == chatRoomDtl.chasenderEmpno) {
                                    html += '<div class="d-flex mb-2 justify-content-end flex-1">';
                                    html += '<div class="w-100 w-xxl-75">';
                                    html += '<div class="d-flex flex-end-center hover-actions-trigger">';
                                    html += '<div class="chat-message-content me-2">';
                                    html += '<div class="mb-1 sent-message-content light bg-primary rounded-2 p-3 text-white">';
                                    html += '<p class="mb-0">' + chatRoomDtl.chatMsg + '</p>';
                                    html += '</div>';
                                    html += '</div>';
                                    html += '<div class="text-end">';
                                    html += '<p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">' + chatRoomDtl.chatDate + '</p>';
                                    html += '</div>';
                                    html += '</div>';
                                    html += '</div>';
                                } else {
                                    html += '<div class="d-flex mb-2 flex-1">';
                                    html += '<div class="w-100 w-xxl-75">';
                                    html += '<div class="d-flex hover-actions-trigger">';
                                    html += '<div class="avatar avatar-m me-3 flex-shrink-0" data-crno="' + chatRoomDtl.crNo + '">';
                                    html += '<img class="rounded-circle" src="..' + chatRoomDtl.empPhoto + '" alt="">';
                                    html += '</div>';
                                    html += '<div class="chat-message-content received me-2">';
                                    html += '<div class="mb-1 received-message-content border rounded-2 p-3">';
                                    html += '<p class="mb-0">' + chatRoomDtl.chatMsg + '</p>';
                                    html += '</div>';
                                    html += '<p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">' + chatRoomDtl.chatDate + '</p>';
                                    html += '</div>';
                                    html += '</div>';
                                    html += '</div>';
                                }
                            }

                            html += '</div>';
                            html += "<input type='hidden' name='chatMsgBoxesCrNo2' id='chatMsgBoxesCrNo2' value='" + chatRoomDtl.crNo + "'/>";
                        });

                        $("#chatListContainer").html(html);
                    } else {
                        // 채팅 내역이 없을 경우 처리
                        html += "<input type='hidden' name='chatMsgBoxesCrNo2' id='chatMsgBoxesCrNo2' value='" + chatRoomDtl.crNo + "'/>";
                        $("#chatListContainer").html('<p>채팅이 아직 없네요...</p>');
                    }
                },
                error: function (error) {
                    console.error("채팅방 정보를 가져오는 중 오류가 발생했습니다.", error);
                }
            });
        }
    });
});
</script>