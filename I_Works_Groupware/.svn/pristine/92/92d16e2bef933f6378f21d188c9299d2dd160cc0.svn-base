package kr.or.ddit.service.impl;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.mapper.AddMapper;
import kr.or.ddit.mapper.PortletMapper;
import kr.or.ddit.mapper.TodoMapper;
import kr.or.ddit.service.IAttendService;
import kr.or.ddit.service.IPortletService;
import kr.or.ddit.vo.AddGroupMemberVO;
import kr.or.ddit.vo.AtStatusVO;
import kr.or.ddit.vo.AttendCombinedVO;
import kr.or.ddit.vo.AttendVO;
import kr.or.ddit.vo.MyAddGroupVO;
import kr.or.ddit.vo.PortletVO;
import kr.or.ddit.vo.TodoListVO;

@Service
public class PortletServiceImpl implements IPortletService {
   
   @Inject
   private PortletMapper mapper;
   @Inject
   private TodoMapper todoMapper;
   @Inject
   private AddMapper addMapper;
   
   @Inject
   private IAttendService attendService;
   
   
   @Override
   public void clearPortlet(String empNo) {
      mapper.deletePortlet(empNo);
   }
   
   @Override
   public void addPortlet(PortletVO portlet) {
      mapper.insertPortlet(portlet);
   }

   @Override
   public List<PortletVO> showPortlet(String empNo) {
      List<PortletVO> portletList = mapper.selectPortletList(empNo); // 포틀릿 좌표 정보
      if(portletList != null && portletList.size() > 0) {
         for(int i = 0; i < portletList.size(); i++) {
            PortletVO portletVO = portletList.get(i);
            if(portletVO != null) {
               String code = portletVO.getPortCatecode();
               if(code.equals("attend")) {
                  // 근태시간
                  int percent = 0;
                  // 금일 일한 내용넣어줄 VO
                  AtStatusVO atStatusVO = new AtStatusVO();
                  atStatusVO = attendService.selectAttendStatus(atStatusVO);
                  AttendVO attendVO = new AttendVO();
                  attendVO = attendService.selectTodayAttend(attendVO);
                  System.out.println(attendVO);
                  // 금일 일한 퍼센테이지를 넣어줄 VO
                  AttendVO getAttendPercent = new AttendVO();
                  if(attendVO==null) {}else {
                     if(attendVO.getAtStart()==null) {}else {
                        // 프로그래스바의 차이를 가져와서 diff에 담아놓음.
                        getAttendPercent = attendService.selectAttendPercent(getAttendPercent);
                        // diff에 담긴 내용을 바탕으로 퍼센트를 뽑아냄.   
                        percent = attendService.getPercent(getAttendPercent);
                     }
                  }
                  AttendCombinedVO attendCombinedVO = new AttendCombinedVO();
                  attendCombinedVO.setAttendVO(attendVO);
                  attendCombinedVO.setAtStatusVO(atStatusVO);
                  attendCombinedVO.setPercent(percent);
                  portletVO.setData(attendCombinedVO);
               } else if(code.equals("mail")) {
                  
               } else if(code.equals("chat")) {
                  
               } else if(code.equals("addr")) {
                  List<AddGroupMemberVO> groupList = addMapper.selectRecentMember(empNo);
                  portletVO.setDataList(groupList);
               } else if(code.equals("schedule")) {
                  
               } else if(code.equals("task")) {
                  
               } else if(code.equals("auth")) {
               
               } else if(code.equals("board")) {
                  
               } else if(code.equals("todolist")) {
                  List<TodoListVO> todoList = todoMapper.selectTodoList(empNo);
                  portletVO.setDataList(todoList);
               }
            }
         }
      }
      return portletList;
   }

}