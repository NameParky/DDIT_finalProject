package kr.or.ddit.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.mapper.BoardFileMapper;
import kr.or.ddit.mapper.NoticeMapper;
import kr.or.ddit.service.IBoardNoticeService;
import kr.or.ddit.vo.BoardNoticeVO;
import kr.or.ddit.vo.FileVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class BoardNoticeServiceImpl implements IBoardNoticeService{

	@Inject
	private NoticeMapper mapper;
	
	@Inject
	private BoardFileMapper filemapper;
	// 게시글 전체 조회
	@Override
	public List<BoardNoticeVO> noticeList() {
		log.info("[noticeList] list");
		return mapper.noticeList();
	}
	// 게시글 등록
	@Override
	public void insertNotice(BoardNoticeVO notice, HttpServletRequest req, HttpServletResponse res) {
		List<MultipartFile> boardfile = notice.getNoFile();
		mapper.insertNotice(notice);
		
		log.info("notice.getNoNo() : {}" ,notice.getNoNo());
		
		String fileNo = ("NO" + notice.getNoNo());
		// 한 게시글의 여러 첨부파일
		if (boardfile != null && !boardfile.isEmpty()) {
			for(int i = 0; i < boardfile.size(); i++) {
				MultipartFile multipartFile = boardfile.get(i);
	            if (!multipartFile.isEmpty()) {
					FileVO file = new FileVO();
					file.setFileNo(fileNo);
					log.info("fileNo : {}",fileNo);
					int fileSec = i + 1;
					file.setFileSec(fileSec);
					log.info("fileSec : {}",fileSec);
					String orgName = notice.getNoFile().get(i).getOriginalFilename();
					file.setFileOrgName(orgName);
					log.info("orgName : {}",orgName);
					String saveName = notice.getNoFile().get(i).getName();
					file.setFileSaveName(saveName);
					log.info("saveName : {}",saveName);
					String savePath = req.getServletContext().getRealPath("/resources/board");
					file.setFileSavePath(savePath);
					log.info("savePath : {}",savePath);
					long size = notice.getNoFile().get(i).getSize();
					file.setFileSize(size);
					log.info("size : {}",size);
					String mime = notice.getNoFile().get(i).getContentType();
					file.setFileMime(mime);
					log.info("mime : {}",mime);
					int lastIndex = orgName.lastIndexOf(".");
					if (lastIndex > 0) {
						String fileType = orgName.substring(lastIndex + 1);
						System.out.println("확장자: " + fileType);
						file.setFileType(fileType);
						log.info("fileType : {}",fileType);
				} else {
					System.out.println("확장자를 찾을 수 없습니다.");
				}
				// 등록한 게시글 첨부파일
				filemapper.insertFile(file);
				log.info("insertFile()...!실행");
				// 게시글 등록
	            }
			}
		}
	}
	// 게시글 상세보기
	@Override
	public BoardNoticeVO selectNotice(String noticeNo) {
		return mapper.selectNotice(noticeNo);
	}
	@Override
	public FileVO selectNoticefile(String noticeNo) {
		String fileNo = ("NO" + noticeNo);
		return filemapper.selectNoticefile(fileNo);
	}
}
