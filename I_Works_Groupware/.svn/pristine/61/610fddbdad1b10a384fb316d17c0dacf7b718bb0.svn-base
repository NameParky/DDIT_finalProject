<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<!-- SocketJS CDN -->
<script src="https://cdn.jsdelivr.net/sockjs/1/sockjs/min.js"></script>
<!-- jstree cdn -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
<!-- 스타일 cdn -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />

<style>
.custom-button {
   display: inline-block;
    padding: 5px 20px;
    background-color: transparent; /* 배경색을 투명하게 설정 */
    border: none; /* 테두리 제거 */
    cursor: pointer;
    width: 100%; /* 버튼을 부모 요소(li)에 맞추기 위해 너비 100% 설정 */
    text-align: center; /* 텍스트를 왼쪽 정렬 */
    background-clip: content-box;
}
.nav-item.room {
    display: flex;
    flex-direction: row;
    text-align: left;
}
.nav-item.room .avatar {
    margin-right: 2px; /* 이미지와 텍스트 사이의 간격 설정 */
}
</style>

<div class="chat d-flex phoenix-offcanvas-container pt-1 mt-n1 mb-9">
<sec:authentication property="principal.emp.empNo" var="empNo"/>
	<div class="card p-3 p-xl-1 mt-xl-n1 chat-sidebar me-3 phoenix-offcanvas phoenix-offcanvas-start" id="chat-sidebar">
		<button class="btn d-none d-sm-block d-xl-none mb-2" data-bs-toggle="modal" data-bs-target="#chatSearchBoxModal">
			<span class="fa-solid fa-magnifying-glass text-600 fs-1"></span>
		</button>
		<div class="d-none d-sm-block d-xl-none mb-5">
			<button class="btn w-100 mx-auto" type="button" data-bs-toggle="dropdown" data-boundary="window"
				aria-haspopup="true" aria-expanded="false" data-bs-reference="parent">
				<span class="fa-solid fa-bars text-600 fs-1"></span>
			</button>
		</div>
		<div>
			<button class="btn btn-primary me-1 mb-1 btn-sm align-items-end" type="button" style="width: 100px;" id="groupChatBtn">채팅방 +</button>
		</div>
		<div class="form-icon-container mb-4 d-sm-none d-xl-block">
			<input class="form-control form-icon-input" type="text" placeholder="People, Groups and Messages" />
			<span class="fas fa-user text-900 fs--1 form-icon"></span>
		</div>
		<!-- aria-selected="true" = 버튼이 눌린상태 -->
		<ul class="nav nav-phoenix-pills mb-5 d-sm-none d-xl-flex" id="contactListTab" 
	    data-chat-thread-tab="data-chat-thread-tab" role="tablist">
	        <li class="nav-item" role="presentation">
	        <button class="custom-button" id="searchUser" role="tab" data-chat-thread-list="user" data-bs-toggle="tab" data-chat-thread-list="user">USER</button>
	        </li>
	        <li class="nav-item" role="presentation">
	        <button class="custom-button" id="searchRoom" role="tab" data-chat-thread-list="room" data-bs-toggle="tab" data-chat-thread-list="room">ROOM</button>
	    	</li>
	    </ul>
	    <div class="scrollbar">
		    <!-- 채팅방 리스트 범위 시작 -->
		    <div class="tab-content" id="contactListTabContent">
		        <div data-chat-thread-tab-content="data-chat-thread-tab-content">
		            <ul class="nav chat-thread-tab flex-column list">
		                <c:choose>
		                    <c:when test="${empty chatlist}">
		                        <li class="nav-item room" role="presentation">
		                            <p>말하던 상대가 없네요...</p>
		                        </li>
		                    </c:when>
		                    <c:otherwise>
		                       <c:forEach var="chatlist" items="${chatlist}">
								    <li class="nav-item room" role="presentation">
								        <a class="nav-link d-flex align-items-center justify-content-start p-2"
								           data-bs-toggle="tab" data-chat-thread="data-chat-thread"
								           href="#tab-thread-1" role="tab" aria-selected="true">
<!-- 								            <div class="avatar avatar-xl status-online position-relative me-2 me-sm-0 me-xl-2"> -->
<!-- 								                <img class="rounded-circle border border-2 border-white" src="../resources/assets/img/team/avatar-rounded.webp" alt=""> -->
<!-- 								            </div> -->
								            <div class="flex-1 d-sm-none d-xl-block">
											    <div class="chat-info">
											        <div class="d-flex justify-content-between align-items-center">
											            <div class="avatar avatar-xl status-online position-relative me-2 me-sm-0 me-xl-2">
											                <img class="rounded-circle border border-2 border-white" src="../resources/assets/img/team/avatar-rounded.webp" alt="">
											            </div>
											            <div class="chat-info-header">
											                <a href="#" id="chatRoomDtl${chatlist.crNo}" data-crno="${chatlist.crNo}" data-empno="${chatlist.empNo}">${!empty chatlist.empName ? chatlist.empName : chatlist.crcmTitle}</a>
											            </div>
											            <p>${chatlist.empNo }</p>
										                <fmt:formatDate value="${chatlist.chatDate }" pattern="yyyy-MM-dd" var="ChatDate"/>
												        <p class="fs--2 text-600 mb-0 text-nowrap">${!empty chatlist.chatMsg ? ChatDate : ""}</p>
											        </div>
											    </div>
										        <div class="chat-info-body">
										            <p class="fs--1 mb-0 line-clamp-1 text-600 message" style="text-align:left;">${chatlist.chatMsg}</p>
										        </div>
											</div>
								        </a>
								    </li>
								</c:forEach>
		                    </c:otherwise>
		                </c:choose>
		            </ul>
		        </div>
		    </div>
		    <!-- 유저리스트 범위 끝 -->
		</div>
	</div>
	<div class="chat-content tab-content flex-1">
	<!-- 채팅구역 시작 -->
		<div class="tab-pane h-100 fade active show" id="tab-thread-1"
			role="tabpanel" aria-labelledby="tab-thread-1">
			<div class="card flex-1 h-100 phoenix-offcanvas-container">
				<div class="card-header p-3 p-md-4 d-flex flex-between-center">
					<div class="d-flex align-items-center">
						<button class="btn ps-0 pe-2 text-700 d-sm-none"
							data-phoenix-toggle="offcanvas"
							data-phoenix-target="#chat-sidebar">
							<span class="fa-solid fa-chevron-left"></span>
						</button>
						<div class="d-flex flex-column flex-md-row align-items-md-center">
							<button
								class="btn fs-1 fw-semi-bold text-1100 d-flex align-items-center p-0 me-3 text-start"
								data-phoenix-toggle="offcanvas"
								data-phoenix-target="#thread-details-0">
								<span class="line-clamp-1">유저 닉네임?이름?</span><span
									class="fa-solid fa-chevron-down ms-2 fs--2"></span>
							</button>
							<p class="fs--1 mb-0 me-2">
								<span class="fa-solid fa-circle text-success fs--3 me-2"></span>활동중</p>
						</div>
					</div>
				</div>
					<div class="card-body p-3 p-sm-4 scrollbar" id="chatMessageBody">
					<c:forEach items="${chatRoomDtlList}" var="chatMessage">
					</c:forEach>
					</div>
				<div class="card-footer">
					<textarea id="messageInput" style="width:100%;border: none;outline: none; resize: none;">채팅문자 적을곳</textarea>
					<div class="d-flex justify-content-between align-items-end">
						<div>
							<button
								class="btn btn-link py-0 ps-0 pe-2 text-900 fs--1 btn-emoji"
								data-picmo="data-picmo">
								<span class="fa-regular fa-face-smile"></span>
							</button>
							<label class="btn btn-link py-0 px-2 text-900 fs--1"
								for="chatPhotos-0"><span class="fa-solid fa-image"></span></label>
							<input class="d-none" type="file" accept="image/*"
								id="chatPhotos-0" /> <label
								class="btn btn-link py-0 px-2 text-900 fs--1"
								for="chatAttachment-0"> <span
								class="fa-solid fa-paperclip"></span></label> <input class="d-none"
								type="file" id="chatAttachment-0" />
							<button class="btn btn-link py-0 px-2 text-900 fs--1">
								<span class="fa-solid fa-microphone"></span>
							</button>
							<button class="btn btn-link py-0 px-2 text-900 fs--1">
								<span class="fa-solid fa-ellipsis"></span>
							</button>
						</div>
						<div>
							<button class="btn btn-primary fs--2" type="button" id="sendMessageBtn" onclick="sendMessage()">Send<span class="fa-solid fa-paper-plane ms-1"></span>
							</button>
						</div>
					</div>
				</div>
				<div class="phoenix-offcanvas phoenix-offcanvas-top h-100 w-100 bg-white scrollbar z-index-0" id="thread-details-0">
					<div class="border-bottom p-4">
                    <div class="d-flex flex-between-center">
						<button class="btn p-0" data-phoenix-dismiss="offcanvas"><span class="fa-solid fa-chevron-left text-700"></span></button>
						<button class="btn p-0 btn-reveal dropdown-toggle dropdown-caret-none transition-none" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent"><span class="fas fa-ellipsis-v text-700"></span></button>
						<div class="dropdown-menu dropdown-menu-end py-2"><a class="dropdown-item" href="#!">View</a><a class="dropdown-item" href="#!">Export</a>
							<div class="dropdown-divider"></div><a class="dropdown-item text-danger" href="#!">Remove</a>
						</div>
                    </div>
                    <div class="d-flex flex-column align-items-center text-center">
						<div class="avatar avatar-4xl mb-2"><img class="rounded-circle border border-2 border-white" src="../resources/assets/img/team/20.webp" alt="" /></div>
							<h4 class="fw-semi-bold mb-3">유저1프로필</h4>
						<div class="d-flex">
							<button class="btn btn-primary btn-icon fs--2 me-1"><span class="fas fa-phone"></span></button>
							<button class="btn btn-primary btn-icon fs--2 me-1"><span class="fas fa-video"></span></button>
							<button class="btn btn-phoenix-secondary btn-icon fs--2"><span class="fas fa-search"></span></button>
						</div>
                    </div>
					</div>
					<div class="p-4 px-sm-5 scrollbar">
                    <button class="btn d-block p-0 fw-semi-bold mb-3"><span class="fa-solid fa-user-pen me-3"></span>닉네임 변경</button>
                    <button class="btn d-block p-0 fw-semi-bold mb-5"><span class="fa-solid fa-user-plus me-3"></span>이 유저를 포함한 단체채팅 생성</button>
                    <div class="d-flex mb-5">
                    </div>
					</div>
               </div>
			</div>
        </div>
         <!-- 채팅구역 끝 -->
	</div>
</div>

<!-- 그룹채팅방 개설 모달(조직도) 시작 -->
<div class="modal fade" id="groupChatModal" tabindex="-1" aria-labelledby="verticallyCenteredModalLabel" aria-hidden="true" data-empno="${empNo }">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="verticallyCenteredModalLabel">조직도</h5>
        <div>
	      	<button class="btn btn-soft-info me-1 mb-1 groupChat_setAll" type="button" data-value="openStatus">전체열기/닫기</button>
	      	<button class="btn btn-soft-info me-1 mb-1 groupChat_setAll" type="button" data-value="checkStatus">전체선택/해제</button>
<!--         <button class="btn p-1" type="button" data-bs-dismiss="modal" aria-label="Close"><svg class="svg-inline--fa fa-xmark fs--1" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="xmark" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" data-fa-i2svg=""><path fill="currentColor" d="M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"></path></svg><span class="fas fa-times fs--1"></span> Font Awesome fontawesome.com</button> -->
      	</div>
      </div>
      <div class="modal-body">
        <div class="d-flex justify-content-end">
	      	<input class="form-control" style="width:250px;" id="groupChat_search_input" type="search" placeholder="Search..." aria-label="Search">
        </div>
        <hr>
        <p class="text-700 lh-lg mb-0">
        	<!-- 조직도 들어가는 곳 -->
        </p>
      </div>
      <div class="modal-footer">
      	<button class="btn btn-info me-1 mb-1" type="button" id="groupChat_selectTree">선택</button>
        <button class="btn btn-outline-info me-1 mb-1" type="button" data-bs-dismiss="modal">취소</button>
      </div>
    </div>
  </div>
</div>
<!-- 그룹채팅방 개설 모달(조직도) 끝 -->

<script type="text/javascript">
	var empNoList = []; // 그룹채팅방 인원 사번(본인 제외)

	//websocket을 지정한 URL로 연결
	var socket = new WebSocket("ws://localhost:80/chat");
	var datas = [];
        // 웹 소켓 연결이 열리면 호출되는 함수
        socket.onopen = function(event) {
            console.log("WebSocket 연결완료.");
        };

     // 메시지를 받았을 때 호출되는 함수
        socket.onmessage = function(event) {
            var message = event.data;
            console.log("서버로부터 메시지를 받았습니다: " + message);
            // 서버에서 받은 메시지는 JSON 형식일 것으로 가정
            var messageData = JSON.parse(message);
            var chatMessage = messageData.message;
            var crNo = messageData.crNo;
            var sender = messageData.sender;

            // chatMessageBody 요소 가져오기
            var chatMessageBody = document.getElementById("chatMessageBody");

            // 새로운 채팅 메시지를 HTML로 만들어 추가
            var html = "";
            if (sender == "${empNo}") {
                html += '<div class="d-flex chat-message">';
                html += '    <div class="d-flex mb-2 justify-content-end flex-1">';
                html += '        <div class="w-100 w-xxl-75">';
                html += '            <div class="d-flex flex-end-center hover-actions-trigger">';
                html += '                <div class="chat-message-content me-2">';
                html += '                    <div class="mb-1 sent-message-content light bg-primary rounded-2 p-3 text-white">';
                html += '                        <p class="mb-0">' + chatMessage + '</p>';
                html += '                    </div>';
                html += '                </div>';
                html += '            </div>';
                html += '            <div class="text-end">';
                html += '                <p class="mb-0 fs--2 text-600 fw-semi-bold">' + new Date().toLocaleString() + '</p>';
                html += '            </div>';
                html += '        </div>';
                html += '    </div>';
                html += '</div>';
            } else {
                html += '<div class="d-flex chat-message">';
                html += '    <div class="d-flex mb-2 flex-1">';
                html += '        <div class="w-100 w-xxl-75">';
                html += '            <div class="d-flex hover-actions-trigger">';
                html += '                <div class="avatar avatar-m me-3 flex-shrink-0" data-empno="' + sender + '"><img class="rounded-circle" src="/resources/profile/' + sender + '.jpg" alt=""></div>';
                html += '                <div class="chat-message-content received me-2">';
                html += '                    <div class="mb-1 received-message-content border rounded-2 p-3">';
                html += '                        <p class="mb-0">' + chatMessage + '</p>';
                html += '                    </div>';
                html += '                </div>';
                html += '            </div>';
                html += '            <p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">' + new Date().toLocaleString() + '</p>';
                html += '        </div>';
                html += '    </div>';
                html += '</div>';
            }

            // chatMessageBody에 메시지 추가
            chatMessageBody.innerHTML += html;
            
         	// 스크롤을 가장 아래로 내림
            scrollToBottom();
        };
        
        function scrollToBottom() {
            var chatMessageBody = document.getElementById("chatMessageBody");
            chatMessageBody.scrollTop = chatMessageBody.scrollHeight;
        }

        // 에러가 발생했을 때 호출되는 함수
        socket.onerror = function(event) {
            console.error("WebSocket 오류 발생: " + event);
        };

        // 웹 소켓 연결이 닫혔을 때 호출되는 함수
        socket.onclose = function(event) {
            if (event.wasClean) {
                console.log("WebSocket 연결이 정상적으로 닫혔습니다.");
            } else {
                console.error("WebSocket 연결이 오류로 인해 닫혔습니다.");
            }
        };

        // 페이지를 닫을 때 웹 소켓 연결을 닫음
        window.onbeforeunload = function() {
            socket.close();
        };

        // 웹 소켓으로 메시지를 보내는 함수
        function sendMessage() {
            var message = document.getElementById("messageInput").value;
            var crNo = document.getElementById("chatMsgBoxesCrNo").value; // crNo를 가져옴
            var data = {
                message: message,
                crNo: crNo
            };
            socket.send(JSON.stringify(data)); // 메시지와 crNo를 JSON 형태로 전송
            document.getElementById("messageInput").value = "";
        }
        
        
	    $(document).ready(function(){
	    	$("#searchRoom").click(function(){
				location.href="/selectChatRoom";
			});
	    	$("#searchUser").click(function(){
				location.href="/selectChatUser";
			});
	    	$("[id^='chatRoomDtl']").click(function(event) {
	    	    event.preventDefault(); // 링크의 기본 동작을 중단
	    	    // 클릭한 링크의 데이터 속성에서 crNo를 가져옴
	    	    
	    	    var empNo = $(this).data("empno");
	    	    var crNo = $(this).data("crno");
		        var requestData = {
		        	    empNo: empNo, // 배열처리
		        	    crNo: crNo
		        	};
		        
	    	    console.log("requestData : " + requestData);
	    	    $.ajax({
	    	        url: '/checkChat',
	    	        type: 'POST',
	    	        data: JSON.stringify(requestData),
	    	        contentType: "application/json",
	    	        dataType:"json",
	    	        success: function(response) {
	    	            console.log(response); // 서버에서 온 데이터 처리
	    	            var crNo = response[0].crNo;
	    	            if(response && response.length > 0){
	    	                var html = "";
	    	                for (var i = 0; i < response.length; i++) {
		    	                	if(response[i].chasenderEmpno == "${empNo}"){
		    	                		html += '<div class="d-flex chat-message">';
		    	                		html += '	<div class="d-flex mb-2 justify-content-end flex-1">';
		    	                		html += '	  <div class="w-100 w-xxl-75">';
		    	                		html += '		<div class="d-flex flex-end-center hover-actions-trigger">';
		    	                		html += '		  <div class="chat-message-content me-2">';
		    	                		html += '			<div class="mb-1 sent-message-content light bg-primary rounded-2 p-3 text-white">';
		    	                		html += '			  <p class="mb-0">'+response[i].chatMsg+'</p>';
		    	                		html += '			</div>';
		    	                		html += '		  </div>';
		    	                		html += '		</div>';
		    	                		html += '		<div class="text-end">';
		    	                		html += '		  <p class="mb-0 fs--2 text-600 fw-semi-bold">'+response[i].chatDate+'</p>';
		    	                		html += '		</div>';
		    	                		html += '	  </div>';
		    	                		html += '	</div>';
		    	                		html += '</div>';
		    	                	}else{
		    	                		html += '<div class="d-flex chat-message">';
		    	                		html += '	<div class="d-flex mb-2 flex-1">';
		    	                		html += '	  <div class="w-100 w-xxl-75">';
		    	                		html += '		<div class="d-flex hover-actions-trigger">';
		    	                		html += '		  <div class="avatar avatar-m me-3 flex-shrink-0" data-empno="'+response[i].chasenderEmpno+'"><img class="rounded-circle" src="/resources/profile/'+response[i].empPhoto+'" alt=""></div>';
		    	                		html += '		  <div class="chat-message-content received me-2">';
		    	                		html += '			<div class="mb-1 received-message-content border rounded-2 p-3">';
		    	                		html += '			  <p class="mb-0">'+response[i].chatMsg+'</p>';
		    	                		html += '			</div>';
		    	                		html += '		  </div>';
		    	                		html += '		</div>';
		    	                		html += '		<p class="mb-0 fs--2 text-600 fw-semi-bold ms-7">'+response[i].chatDate+'</p>';
		    	                		html += '	  </div>';
		    	                		html += '	</div>';
		    	                		html += '</div>';
		    	                	}
		    	                }
		    	                html += "<input type='hidden' name='chatMsgBoxesCrNo' id='chatMsgBoxesCrNo' value='"+crNo+"'/>";
		    	                $("#chatMessageBody").html(html)
		    	             	// 스크롤을 가장 아래로 내림
		    	                scrollToBottom();
		    	            } else {
		    	                console.log("서버로부터 받은 데이터가 없음");
	    	            }
	    	        },
	    	        error: function(error) {
	    	            console.error('/checkChat', error);
	    	        }
	    	    });
	    	});
	    }); 
        
///////////////// 그룹채팅방 개설(조직도) 시작 /////////////////
let groupChat_treeContent;
let groupChat_select; // 선택된 사람들이 객체로 들어있음
let groupChat_modal;
let groupChat_openFlag = false;
let groupChat_checkFlag = false;

$("#groupChatBtn").on("click", function(){
	groupChat_treeContent = $("#groupChatModal .modal-body > p");
	groupChat_treeContent.jstree({
		"core" : {
			"data" : {
				"url" : "/add/treelist.do",
				"dataType": "json"
			},
			"check_callback" : true // 동적 노드 생성 허용!!!!!
		},
		"checkbox" : {
		      "three_state" : true, // 자식 노드 선택시 부모 노드 선택
		      "keep_selected_style" : false
	    },
		"search": {
	        "show_only_matches" : false,
	        "show_only_matches_children" : false
	    },
	    "types" : {
	    	"#" : {
	    	      "max_children" : 1,
	    	      "max_depth" : 4,
	    	      "valid_children" : ["root"]
    	    },
	    	"default" : {
	    		"icon" : false
       	 	}
	    },
	    "state" : {
	         "opened" : false,
	         "selected" : false
        },
		"plugins" : ["checkbox", "search", "types", "state", "changed"]
	});
	
	groupChat_treeContent.bind("loaded.jstree", function(e, data) {
		console.log("트리 로딩 완료");
		var model = groupChat_treeContent.jstree(true)._model.data;
		$.each(model, function(idx, idata){ // 전체 객체 참조
		    console.log( idata.id );
		    $.ajax({
				type: "get",
				url: "/add/deptemp.do?deptCd=" + idata.id,
				dataType : "json",
				success: function(result){
					if(result != null && result.length != 0){
						console.log("result : " + JSON.stringify(result));
						for(var i = 0; i < result.length; i++){
							groupChat_treeContent.jstree(true).create_node(idata.id, result[i], "last", function(){
								console.log("노드 생성 성공");
							});
						}
					}
				}
			});
		});
	}.bind(this));
	
	// 해당 id의 노드를 open 상태로 바꿉니다.
	groupChat_treeContent.on("ready.jstree", function(){
		$(this).jstree("open_node", "#"); // 이 경우 id가 1번인 root노드를 열린 상태로 로드함
	});
	  	
  	var to = false;
  	$('#groupChat_search_input').keyup(function () {
  	    if(to) { clearTimeout(to); }
  	    to = setTimeout(function () {
  	      var v = $('#groupChat_search_input').val();
  	      groupChat_treeContent.jstree(true).search(v);
  	    }, 250);
  	});
	  	
  	groupChat_modal = new window.bootstrap.Modal(groupChatModal);
  	groupChat_modal.show();
});

$("#groupChat_selectTree").on("click", function(){
	groupChat_select = groupChat_treeContent.jstree('get_selected',true);
	console.log(groupChat_select); // 선택된 사람들 리스트
//  	console.log("선택된 사람[0] 아이디 : " + groupChat_select[0].id);
//  	console.log("선택된 사람[0] 이름 : " + groupChat_select[0].text);
//  	console.log("선택된 사람[0] 부서 : " + groupChat_select[0].original.deptVO);

	empNoList.length = 0; // 배열 비워준다
	
	let cnt = 0;
	for(var i = 0; i < groupChat_select.length; i++){
		var isMe = false;
		if(groupChat_select[i].id == $("#groupChatModal").data("empno")){ // 본인을 선택하면
			var isMe = true;
		}
		if(isMe){
			cnt++;
			continue;
		}
		if(groupChat_select[i].original.deptVO != null){
			empNoList.push(groupChat_select[i].id);
		}
	}
	if(cnt != 0){
// 		alert("본인 제외... 이건 굳이 알려주지 않아도 될 것 같아 주석 처리 합니다.");
		console.log("본인 제외됨");
	}
	console.log(empNoList);

	groupChat_modal.hide();
});

$(".groupChat_setAll").on("click", function(){
	var value = $(this).data("value"); // data-value 값을 가져옵니다.
	console.log(value);
	if(value == "openStatus"){
		if(!groupChat_openFlag){
			groupChat_openFlag = true;
			groupChat_treeContent.jstree("open_all");
		}else{
			groupChat_openFlag = false;
			groupChat_treeContent.jstree("close_all");
		}
	}
	if(value == "checkStatus"){
		if(!groupChat_checkFlag){
			groupChat_checkFlag = true;
			groupChat_treeContent.jstree("check_all");
		}else{
			groupChat_checkFlag = false;
			groupChat_treeContent.jstree("uncheck_all");
		}
	}	
});

///////////////// 그룹채팅방 개설(조직도) 끝 /////////////////

</script>