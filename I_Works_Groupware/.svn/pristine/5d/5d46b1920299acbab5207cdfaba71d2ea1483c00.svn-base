package kr.or.ddit.controller.reservation;

import java.security.Principal;
import java.util.List;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.service.IFreeseatService;
import kr.or.ddit.vo.ScheVO;
import kr.or.ddit.vo.SeatResVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/rsv")
public class FreeseatRsvController {

	@Inject
	private IFreeseatService freeseatService;
	
	@RequestMapping(value="/freeseat.do", method = RequestMethod.GET)
	public String mainpage() {
		return "main/reservation/freeseatMain";
	}
	
	@RequestMapping(value="/seatlayout.do", method = RequestMethod.GET)
	public String seatLayout() {
		return "main/reservation/seatLayout";
	}
	
	@ResponseBody
	@RequestMapping(value="/seatlayoutdata.do", method = RequestMethod.GET)
	public ResponseEntity<List<SeatResVO>> showLayout() {
		List<SeatResVO> reservedSeatList = freeseatService.showReservedSeat();
		ResponseEntity<List<SeatResVO>> entity = new ResponseEntity<List<SeatResVO>>(reservedSeatList, HttpStatus.OK);
		return entity;
	}
	
	@RequestMapping(value="/confirmseat.do", method = RequestMethod.POST)
	public String confirmSeat(Principal principal, SeatResVO seatResVO, RedirectAttributes ra) {
		log.info(seatResVO.toString());

		// 오늘 나의 예약 내역 존재하는지 확인
		ServiceResult result = freeseatService.chkMyFreeseat(principal.getName());
		if(result == ServiceResult.NOTEXIST) {
			seatResVO.setEmpNo(principal.getName());
			ServiceResult result2 = freeseatService.makeRsvFreeseat(seatResVO); // 그새 다른 사람 예약 존재하는지 확인
			if(result2 == ServiceResult.OK) {
				ra.addFlashAttribute("message", "예약이 완료되었습니다.");
			}else {
				ra.addFlashAttribute("message", "다른 직원이 먼저 예약 완료하여 예약 실패했습니다.<br>다시 시도해 주세요.");
			}
		} else if(result == ServiceResult.EXIST) {
			ra.addFlashAttribute("message", "오늘의 예약 내역이 이미 존재합니다.");
		}
		
		return "redirect:/myrsv/list.do"; // 예약내역 페이지
	}

}
