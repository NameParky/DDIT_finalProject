package kr.or.ddit.controller.reservation;

import java.security.Principal;
import java.util.Date;
import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang.StringUtils;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.IAssetService;
import kr.or.ddit.service.IFreeseatService;
import kr.or.ddit.service.IRoomService;
import kr.or.ddit.vo.AssRentVO;
import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.RoomResVO;
import kr.or.ddit.vo.SeatResVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class RsvListController {
	
	@Inject
	private IFreeseatService freeseatService;
	
	@Inject
	private IAssetService assService;

	@Inject
	private IRoomService roomService;
	
	// 내예약 페이지(사용자)
	@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_MEMBER')")
	@RequestMapping(value="/myrsv/list.do", method = RequestMethod.GET)
	public String mainpage(
			Principal principal, 
			Model model,
			@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(name="dateSelect", required = false)  String searchDate
			) {
		// 자율좌석
		List<SeatResVO> freeseatList = freeseatService.myFreeseatRsvList(principal.getName());
		model.addAttribute("freeseatList", freeseatList);
		
		// 자산
		List<AssRentVO> assetList = assService.myAssRsvList(principal.getName());
		model.addAttribute("assetList", assetList);

		// 회의실
//		List<RoomResVO> roomList = roomService.myRoomRsvList(principal.getName());
//		model.addAttribute("roomList", roomList);
		
		// 페이징
		// 페이징 정보를 담고 관리할 PaginationInfoVO 객체를 생성합니다. TaskVO를 사용하여 데이터를 페이징할 것을 지정합니다.
		PaginationInfoVO<RoomResVO> pagingVO = new PaginationInfoVO<RoomResVO>();
		pagingVO.setEmpNo(principal.getName());

		
		// 검색이 이뤄지면 아래가 실행됨
 		if(StringUtils.isNotBlank(searchDate)) {
 			pagingVO.setSelectedDate(searchDate);
 			model.addAttribute("searchDate", searchDate);
 		}
		
 		// 현재 페이지 번호를 설정
 		pagingVO.setCurrentPage(currentPage);
 		// 전체 게시글 수를 DB에서 가져옴
 		int totalRecord = roomService.selectMyRoomCount(pagingVO);
 		// 페이징 정보에 전체 게시글 수를 설정해 총 페이지 수를 결정
 		pagingVO.setTotalRecord(totalRecord);
 		// 페이징 정보를 사용해 게시글 목록을 DB에서 가져옴
 		List<RoomResVO> roomPList = roomService.myRoomRsvPList(pagingVO);
 		// 페이징 정보 객체에 게시글 목록을 설정
 		pagingVO.setDataList(roomPList);
 		model.addAttribute("pagingVO", pagingVO);
	
//		List<RoomResVO> roomPList = roomService.myRoomRsvPList(principal.getName());
//		model.addAttribute("roomPList", roomPList);
		
		model.addAttribute("resBar", "resBar");
		return "main/reservation/myRsvList";
	}
	
	// 자율좌석 날짜 검색
	@ResponseBody
	@RequestMapping(value="/dateseatlist.do", method = RequestMethod.POST)
	public ResponseEntity<List<SeatResVO>> cancleSeat(Principal principal, @RequestBody SeatResVO seatResVO) {
		seatResVO.setEmpNo(principal.getName());
		log.info("seatResVO : " + seatResVO.toString());
		List<SeatResVO> dateFreeseatList = freeseatService.dateFreeSeatRsvList(seatResVO);
		ResponseEntity<List<SeatResVO>> entity = new ResponseEntity<List<SeatResVO>>(dateFreeseatList, HttpStatus.OK);
		return entity;
	}
	
	// 예약현황 페이지(관리자)
	@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
	@RequestMapping(value="/admin/rsvlist.do", method = RequestMethod.GET)
	public String mainpageAdmin(Principal principal, Model model) {
		List<SeatResVO> freeseatList = freeseatService.allFreeseatRsvList();
		model.addAttribute("freeseatList", freeseatList);
		model.addAttribute("resBar", "resBar");
		return "main/reservation/allRsvListAdmin";
	}
	
}
