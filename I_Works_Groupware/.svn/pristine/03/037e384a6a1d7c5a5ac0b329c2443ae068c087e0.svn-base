package kr.or.ddit.controller.board;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.security.CustomUser;
import kr.or.ddit.service.IBoardNoticeService;
import kr.or.ddit.vo.BoardNoticeVO;
import kr.or.ddit.vo.FileVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class NoticeBoardController {
	
	@Inject
	private IBoardNoticeService noticeService;
	
	// 메인 화면 게시글 전체 조회
	@RequestMapping(value="/noticemain.do", method=RequestMethod.GET)
	public String NoticeBoard(Model model) {
		log.info("NoticeBoard() 실행...!");
		String boardBar = "EXIST";
		model.addAttribute("boardBar", boardBar);
		
		List<BoardNoticeVO> noticeList = noticeService.noticeList();
		model.addAttribute("noticeList", noticeList);
		return "main/board/noticeMain";
	}
	
	// 글 등록
	@RequestMapping(value = "/insertNotice", method = RequestMethod.POST)
	public String insertNotice(BoardNoticeVO notice, 
			Model model,
			HttpServletRequest req,
			HttpServletResponse res) {
		log.info("NoticeBoard() 실행...!");
		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		String chatuser = user.getEmp().getEmpNo();
		String goPage = "";
		
		notice.setNoWriterEmpNo(chatuser);
		noticeService.insertNotice(notice,req,res);
		goPage = "redirect:/noticemain.do";
		
		return goPage;
	}
	// 상세 보기
	@RequestMapping(value="/noticedetail.do")
	public String NoticeBoardDetail(Model model, String noticeNo) {
		log.info("NoticeBoardDetail() 실행....!");
		String boardBar = "EXIST";
		model.addAttribute("boardBar", boardBar);
		
		BoardNoticeVO noticeVO = noticeService.selectNotice(noticeNo);
		FileVO fileVO = noticeService.selectNoticefile(noticeNo);
		model.addAttribute("notice", noticeVO);
		model.addAttribute("file", fileVO);
		return "main/board/noticeDetail";
	}
	
	
	
	
	
	
	
	
	
	
	
	/*
	 * 관리자용
	 */
	
	@RequestMapping(value="/noticewrite.do", method=RequestMethod.GET)
	public String WriteNoticeBoard(Model model) {
		String boardBar = "EXIST";
		model.addAttribute("boardBar", boardBar);
		return "main/board/noticeWrite";
	}

}
