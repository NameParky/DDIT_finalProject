package kr.or.ddit.service;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.http.ResponseEntity;

import kr.or.ddit.vo.FolderFileVO;
import kr.or.ddit.vo.FolderVO;

public interface IFileService {
	
	/**
	 * FolderVO를 파라미터로 받고,
	 * 사번, 폴더이름, 폴더상위부모의 값을 받아
	 * 폴더를 생성해주는 로직
	 * @return 
	 */
	public String insertIndFolder(FolderVO folderVO, HttpServletRequest req, HttpServletResponse resp);
	
	/**
	 * FolderVO를 파라미터로 받고,
	 * 사번, 폴더부모의 값을 받아
	 * 개인자료실의 폴더를 셀렉트 값을 리턴해주는 로직
	 */
	public FolderVO selectIndFolder(FolderVO folderVO);

	/**
	 * FolderVO를 파라미터로 받고,
	 * 폴더부모값을 받아
	 * 폴더부모값이 폴더코드인 폴더값을 리턴해주는 로직
	 */
	public FolderVO selectParentFolder(String motherFolder);
	
	/**
	 * FolderVO를 파라미터로 받고,
	 * 폴더코드를 받아
	 * parma의 폴더코드를 부모폴더로 가지고있는 리스트를 리턴해주는 로직
	 */
	public List<FolderVO> selectChildFolder(FolderVO folderVO);
	
	/**
	 * FolderVO를 파라미터로 받고,
	 * 폴더코드값을 받아
	 * 본인의 폴더값을 리턴해오는 로직
	 */
	public FolderVO selectMyselfFolder(FolderVO myself);
	
	/**
	 * folderVO를 파라미터로 받아 해당 폴더에 파일을 인서트시키고,
	 * 파일공간정보를 session에 담아 해당페이지로 이동하게하는 로직
	 * @param folderVO
	 * @param req
	 * @param resp
	 * @return 
	 * @throws IOException 
	 */
	public String insertIndFile(FolderVO folderVO, HttpServletRequest req, HttpServletResponse resp) throws IOException;

	/**
	 * 폴더코드를 받아
	 * param의 폴더코드를 부모폴더로 가지고있는 파일리스트를 리턴해주는 로직
	 */
	public List<FolderFileVO> selectChildFile(FolderVO folderVO);

	/**
	 * 폴더VO의 empNo를 받아 코드, 명칭, empNo를 본인의 empNo로
	 * 생성되는 기본 디폴트 폴더
	 */
	public void insertDefaultIndFolder(FolderVO folderVO);

	/**
	 * 디폴트폴더의 갯수를 알려주는 로직
	 * 해당 숫자가 1일경우 '존재함', 아닐경우 '존재하지 않음'으로 나뉜다.
	 */
	public int selectDefaultIndFolder(FolderVO folderVO);

	/**
	 * 폴더파일VO의 fileCd를 받아 자신의 정보를 반환하는 로직
	 */
	public FolderFileVO selectMyselfFile(FolderFileVO folderFileVO);

	/**
	 * 파일다운로드 로직을 완수하고 ResponseEntity 타입으로 반환해주는 로직. 
	 * @throws UnsupportedEncodingException 
	 */
	public ResponseEntity<byte[]> fileDownload(String submitFileCd, HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException;
	
	/**
	 * ajax param값으로 받은 FileCd값을 이용하여
	 * 컨트롤러에서 설정해준 fileLikese를 수정해주는 로직.
	 * @return 
	 */
	public Map<String, FolderFileVO> updateLikeSe(Map<String, Object> param);

	public ResponseEntity<byte[]> alzipDownload(List<String> folderArray, List<String> fileArray, HttpServletRequest request,
			HttpServletResponse response) throws IOException;

	public Map<String, FolderFileVO> imageFileInfoAjax(Map<String, Object> param);

	

}
