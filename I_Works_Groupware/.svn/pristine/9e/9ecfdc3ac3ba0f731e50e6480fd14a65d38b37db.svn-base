<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.TaskMapper">

<!-- 	<resultMap type="taskVO" id="taskMap"> -->
<!-- 		<id property="taskCd" column="task_cd"/> -->
<!-- 		<result property="taskTitle" column="task_title"/> -->
<!-- 		<result property="taskContent" column="task_content"/> -->
<!-- 		<result property="taskStartdate" column="task_startdate"/> -->
<!-- 		<result property="taskEnddate" column="task_enddate"/> -->
<!-- 		<result property="taskType" column="task_type"/> -->
<!-- 		<result property="taskMemo" column="task_memo"/> -->
<!-- 		<result property="empNo" column="emp_no"/> -->
<!-- 		<result property="teamEmp" column="team_emp"/> -->
<!-- 		<result property="empPhoto" column="emp_photo"/> -->
<!-- 		<result property="teamempPhotos" column="teamemp_photos"/> -->
<!-- 		<result property="tdCd" column="td_cd"/> -->
<!-- 		<result property="tdContent" column="td_content"/> -->
<!-- 		<result property="tdStartdate" column="td_startdate"/> -->
<!-- 		<result property="tdEnddate" column="td_Enddate"/> -->
<!-- 		<result property="tdMemo" column="td_memo"/> -->
<!-- 		<result property="tdStatusse" column="td_statusse"/> -->
<!-- 		<result property="tdEmpno" column="td_empno"/> -->
<!-- 		<result property="tdEmpphoto" column="td_empphoto"/> -->
<!-- 		<result property="chargeEmp" column="charge_emp"/> -->
<!-- 	</resultMap> -->

<!-- 	<select id="selectTaskCount" parameterType="pagingVO" resultType="int"> -->
<!-- 		select count(task_cd) -->
<!-- 		from task -->
<!-- 		where 1=1 -->
<!-- 		<include refid="boardSearch"/> -->
<!-- 	</select> -->
	
	<sql id="taskSearch">
		<if test="searchType != null and searchType == 'title'">
			and (task_title like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'content'">
			and (task_content like '%'||#{searchWord}||'%')
		</if>
	</sql>
	
	<select id="taskCount" parameterType="pagingVO" resultType="int">
		SELECT COUNT(*) FROM (
		    SELECT
		        a.TASK_CD,
		        a.TASK_TITLE,
		        a.TASK_CONTENT,
		        a.TASK_STARTDATE,
		        a.TASK_ENDDATE,
		        a.TASK_TYPE,
		        a.TASK_MEMO,
		        a.EMP_NO,
		        LISTAGG(b.EMP_NO, ', ') WITHIN GROUP (ORDER BY b.EMP_NO) AS team_emp,
		        (
		            SELECT COUNT(*) FROM TKDETAIL WHERE TASK_CD = a.TASK_CD AND TD_STATUSSE = 'y'
		        ) AS td_ychk,
		        (
		            SELECT COUNT(*) FROM TKDETAIL WHERE TASK_CD = a.TASK_CD
		        ) AS td_totchk,
		        (
		            SELECT c.EMP_PHOTO FROM EMP c WHERE c.EMP_NO = a.EMP_NO
		        ) AS emp_photo
		    FROM TASK a
		    LEFT OUTER JOIN TKCHARGE b ON a.TASK_CD = b.TASK_CD
		    WHERE a.EMP_NO = '2310A01001' OR '2310A01001' IN (SELECT EMP_NO FROM TKCHARGE WHERE TASK_CD = a.TASK_CD)
		    GROUP BY a.TASK_CD, a.TASK_TITLE, a.TASK_CONTENT, a.TASK_STARTDATE, a.TASK_ENDDATE, a.TASK_TYPE, a.TASK_MEMO, a.EMP_NO
		)
	</select>


	<select id="selectTaskList" parameterType="string" resultType="taskVO">
	    <![CDATA[
	      SELECT 
			    a.TASK_CD,
			    a.TASK_TITLE,
			    a.TASK_CONTENT,
			    a.TASK_STARTDATE,
			    a.TASK_ENDDATE,
			    a.TASK_TYPE,
			    a.TASK_MEMO,
			    a.EMP_NO,
			    LISTAGG(b.emp_no, ', ') WITHIN GROUP (ORDER BY b.emp_no) AS team_emp,
			    (SELECT COUNT(DECODE(td_statusse, 'y', 1)) FROM tkdetail WHERE task_cd = a.TASK_CD) AS td_ychk,
			    (SELECT COUNT(td_statusse) FROM tkdetail WHERE task_cd = a.TASK_CD) AS td_totchk,
			    (select c.emp_photo from emp c where a.emp_no = c.emp_no OR c.emp_no = a.emp_no) as emp_photo
			FROM task a 
			LEFT OUTER JOIN tkcharge b ON a.task_Cd = b.task_Cd
			WHERE a.emp_no = #{empNo} OR #{empNo} IN (SELECT emp_no FROM tkcharge WHERE task_Cd = a.task_Cd)
			GROUP BY a.TASK_CD, a.TASK_TITLE, a.TASK_CONTENT, a.TASK_STARTDATE, a.TASK_ENDDATE, a.TASK_TYPE, a.TASK_MEMO, a.EMP_NO
			ORDER BY a.TASK_ENDDATE
	    ]]>
	</select>
	
	<select id="selectTaskListPaging" parameterType="pagingVO" resultType="taskVO">
  <![CDATA[
	select
		b.*
	from (
      SELECT 
      		a.*, row_number() over (order by a.task_cd desc) rnum
      FROM (
      	SELECT
		    task.TASK_CD,
		    task.TASK_TITLE,
		    task.TASK_CONTENT,
		    task.TASK_STARTDATE,
		    task.TASK_ENDDATE,
		    task.TASK_TYPE,
		    task.TASK_MEMO,
		    task.EMP_NO,
	     		
		    LISTAGG(tc.emp_no, ', ') WITHIN GROUP (ORDER BY tc.emp_no) AS team_emp,
		    
		    (SELECT COUNT(DECODE(td_statusse, 'y', 1)) FROM TKDETAIL WHERE task_cd = task.TASK_CD) AS td_ychk,
		    (SELECT COUNT(td_statusse) FROM TKDETAIL WHERE task_cd = task.TASK_CD) AS td_totchk,
		    (select c.emp_photo from EMP c where task.emp_no = c.emp_no OR c.emp_no = task.EMP_NO) as emp_photo
		FROM task
		LEFT OUTER JOIN TKCHARGE tc ON task.task_Cd = tc.task_Cd
		WHERE task.emp_no = #{empNo} OR #{empNo} IN (SELECT emp_no FROM TKCHARGE WHERE task_Cd = task.task_Cd)
		GROUP BY task.TASK_CD, task.TASK_TITLE, task.TASK_CONTENT, task.TASK_STARTDATE, task.TASK_ENDDATE, task.TASK_TYPE, task.TASK_MEMO, task.EMP_NO
		ORDER BY task.TASK_ENDDATE
		) a
	) b
	where b.rnum >= #{startRow} and b.rnum <= #{endRow}
  ]]>
</select>



	<!-- map이었음 -->
	<select id="selectTaskStatList" parameterType="taskVO" resultType="taskVO">
		SELECT
			task_cd, td_statusse, a.EMP_NO,
		FROM TKDETAIL
		where a.emp_no = #{empNo} OR #{empNo} IN (SELECT emp_no FROM tkcharge WHERE task_Cd = a.task_Cd)
	</select>	
	
	<insert id="insertTask" parameterType="taskVO">
	    INSERT INTO task (
	        TASK_CD, TASK_TITLE, TASK_CONTENT, TASK_STARTDATE, TASK_ENDDATE, TASK_TYPE, TASK_MEMO, EMP_NO
	    ) VALUES (
	        (SELECT NVL(MAX(TO_NUMBER(task_cd)), 0) + 1 FROM task), 
	        #{taskTitle}, #{taskContent}, #{taskStartdate}, #{taskEnddate}, #{taskType}, #{taskMemo}, #{empNo}
	    )
	</insert>
	<insert id="insertTeamEmp" parameterType="taskVO">
		<selectKey keyProperty="taskCd" resultType="string" order="BEFORE">
			SELECT NVL(MAX(TO_NUMBER(task_cd)), 0) FROM task
		</selectKey>
        INSERT  ALL 
	    <foreach collection="teamEmpList" item="empNo">
	        INTO TKCHARGE (TASK_CD, EMP_NO) VALUES (#{taskCd}, #{empNo})
	    </foreach>
    	SELECT*FROM DUAL
	</insert>
<!-- 	<insert id="insertTeamEmp" parameterType="taskVO"> -->
<!-- 	        INSERT  ALL  -->
<!-- 	    <foreach collection="teamEmpList" item="empNo"> -->
<!-- 	        INTO TKCHARGE (TASK_CD, EMP_NO) VALUES ((SELECT NVL(MAX(TO_NUMBER(task_cd)), 0) FROM task), #{empNo}) -->
<!-- 	    </foreach> -->
<!-- 	    	SELECT*FROM DUAL -->
<!-- 	</insert> -->



<!-- 	<insert id="insertTask" parameterType="taskVO" useGeneratedKeys="true" keyProperty="taskCd"> -->
<!-- 	    INSERT INTO task ( -->
<!-- 	        TASK_CD, TASK_TITLE, TASK_CONTENT, TASK_STARTDATE, TASK_ENDDATE, TASK_TYPE, TASK_MEMO, EMP_NO -->
<!-- 	    ) VALUES ( -->
<!-- 	        (SELECT NVL(MAX(TO_NUMBER(task_cd)), 0) + 1 FROM task),  -->
<!-- 	        #{taskTitle}, #{taskContent}, #{taskStartdate}, #{taskEnddate}, #{taskType}, #{taskMemo}, #{empNo} -->
<!-- 	    ) -->
<!-- 	</insert> -->
<!-- 	<insert id="insertTeamEmp" parameterType="taskVO"> -->
<!-- 	    INSERT INTO TKCHARGE (TASK_CD, EMP_NO) -->
<!-- 	    VALUES -->
<!-- 	    <foreach collection="teamEmpList" item="empNo" separator=","> -->
<!-- 	        (#{taskCd}, #{empNo}) -->
<!-- 	    </foreach> -->
<!-- 	</insert> -->
	
	
	<!-- map이었음 -->
	<select id="selectTask" parameterType="taskVO" resultType="taskVO">
		<![CDATA[
		SELECT 
		    a.TASK_CD,
		    a.TASK_TITLE,
		    a.TASK_CONTENT,
		    a.TASK_STARTDATE,
		    a.TASK_ENDDATE,
		    a.TASK_TYPE,
		    a.TASK_MEMO,
		    a.EMP_NO as charge_emp, 
		   	(select c.emp_photo from emp c where a.emp_no = c.emp_no OR c.emp_no = a.emp_no) as emp_photo,
		    LISTAGG(b.emp_no, ', ') WITHIN GROUP (ORDER BY b.emp_no) AS team_emp,
		    LISTAGG(c.emp_photo, ', ') WITHIN GROUP (ORDER BY b.emp_no) AS teamemp_photos
		FROM task a 
		LEFT OUTER JOIN tkcharge b ON a.task_Cd = b.task_Cd
		LEFT OUTER JOIN emp c ON b.emp_no = c.EMP_NO
		WHERE a.task_cd = #{taskCd}
		GROUP BY a.TASK_CD, a.TASK_TITLE, a.TASK_CONTENT, a.TASK_STARTDATE, a.TASK_ENDDATE, a.TASK_TYPE, a.TASK_MEMO, a.EMP_NO
		ORDER BY TO_NUMBER(task_cd)  
	    ]]>
	</select>
	
	<delete id="deleteTask" parameterType="taskVO">
		DELETE TASK
		where TASK_CD = #{taskCd}
	</delete>
	
	<!-- map이었음 -->
	<select id="selectDetTaskList" parameterType="taskVO" resultType="taskVO">
		SELECT
			td_cd, task_cd, td_content, td_startdate, td_enddate, td_closedate, td_memo, td_statusse, td_empno, e.emp_photo as td_empphoto, E.EMP_NAME as TD_EMPNAME
		FROM TKDETAIL
		LEFT OUTER JOIN EMP e ON (td_empno = e.emp_no)
		where task_cd = #{taskCd}
	</select>	

	<!-- map이었음 -->
	<select id="selectTeamEmpList" parameterType="taskVO" resultType="taskVO">
		select 
		    A.emp_no, e.emp_photo		
		from TKCHARGE A
		LEFT OUTER JOIN EMP E ON A.EMP_NO = E.EMP_NO
		where task_cd = #{taskCd}
	</select>	
<!-- 	<select id="selectNoTdEmpList" parameterType="taskVO" resultType="taskVO"> -->
<!-- 			SELECT DISTINCT -->
<!-- 			    A.TASK_CD, A.EMP_NO, c.emp_photo -->
<!-- 			FROM TKCHARGE A -->
<!-- 			left outer join tkdetail b on a.task_Cd = b.task_cd -->
<!-- 			left outer join emp c on c.emp_no = a.emp_no -->
<!-- 			WHERE A.TASK_CD = #{taskCd} -->
<!-- 			AND A.EMP_NO NOT IN (SELECT TD_EMPNO FROM TKDETAIL WHERE TASK_CD = #{taskCd}) -->
<!-- 	</select> -->
	<select id="TdSeparateEmpList" parameterType="taskVO" resultType="taskVO">
		SELECT DISTINCT
		    A.TASK_CD,
		    A.EMP_NO ,
		    C.EMP_PHOTO,
		    case  when a.emp_no is not null then '1' end as status_emp
		FROM TKCHARGE A
		INNER JOIN TKDETAIL B ON A.EMP_NO = B.TD_EMPNO
		INNER JOIN EMP C ON a.emp_no = C.EMP_NO
		WHERE A.TASK_CD = #{taskCd}
		AND A.TASK_CD = B.TASK_CD
		
		UNION
		
		SELECT DISTINCT
		    A.TASK_CD,
		    A.EMP_NO,
		    C.EMP_PHOTO AS emp_photo,
		    case  when a.emp_no is not null then '2' end as status_emp
		FROM TKCHARGE A
		LEFT JOIN TKDETAIL B ON A.TASK_CD = B.TASK_CD
		LEFT JOIN EMP C ON C.EMP_NO = A.EMP_NO
		WHERE A.TASK_CD = #{taskCd}
		AND A.EMP_NO NOT IN (SELECT TD_EMPNO FROM TKDETAIL WHERE TASK_CD = #{taskCd})						
	</select>
	
	<insert id="insertdetTask" parameterType="taskVO">
		INSERT INTO TKDETAIL(
			TD_CD, TD_CONTENT, TD_STARTDATE, TD_CLOSEDATE, TD_MEMO, TASK_CD, TD_EMPNO
		) VALUES(
			(SELECT NVL(MAX(TO_NUMBER(TD_CD)), 0) + 1 FROM TKDETAIL), #{tdContent}, sysdate, #{tdClosedate}, #{tdMemo}, #{taskCd}, #{tdEmpno}
		)
	</insert>
	
	<update id="updateTask" parameterType="taskVO">
		UPDATE TASK 
		SET
			TASK_TITLE = #{taskTitle},
			TASK_STARTDATE = #{taskStartdate}, 
			TASK_ENDDATE = #{taskEnddate}, 
			TASK_TYPE = #{taskType},
			TASK_CONTENT = #{taskContent},
			TASK_MEMO = #{taskMemo}
		WHERE TASK_CD = #{taskCd}
	</update>
	<delete id="deletedTeamMembers" parameterType="taskVO">
		DELETE FROM tkcharge WHERE task_cd = #{taskCd} AND emp_no IN
	   <foreach collection="delEmpList" item="deletedTeamMembers" open="(" separator="," close=")">
	     #{deletedTeamMembers}
	   </foreach>
	</delete>
	
	<update id="turnNChk" parameterType="taskVO">
		UPDATE TKDETAIL 
		SET
			TD_STATUSSE = 'n',
			TD_ENDDATE = ''
		WHERE TD_CD = #{tdCd}
	</update>
<!-- 	UPDATE TKDETAIL  -->
<!-- 		SET -->
<!-- 			TD_STATUSSE = 'n', -->
<!-- 			TD_ENDDATE = '' -->
<!-- 		WHERE TD_CD = #{tdCd} -->
	<update id="turnYChk" parameterType="taskVO">
		UPDATE TKDETAIL 
		SET
			TD_STATUSSE = 'y',
			TD_ENDDATE = SYSDATE
		WHERE TD_CD = #{tdCd}
	</update>
<!-- 	UPDATE TKDETAIL  -->
<!-- 		SET -->
<!-- 			TD_STATUSSE = 'y', -->
<!-- 			TD_ENDDATE = SYSDATE -->
<!-- 		WHERE TD_CD = #{tdCd} -->
	<update id="updateChk" parameterType="taskVO">
		UPDATE TKDETAIL 
		SET
			TD_CONTENT = #{tdContent},
			TD_MEMO = #{tdMemo}
		WHERE TD_CD = #{tdCd}
	</update>
	
	<delete id="deleteTd" parameterType="taskVO">
		delete TKDETAIL
		where td_cd = #{tdCd}
	</delete>
	
	<update id="updateTd" parameterType="taskVO">
		UPDATE TKDETAIL 
		SET
			TD_CONTENT = #{tdContent},
			TD_MEMO = #{tdMemo},
			TD_CLOSEDATE = #{tdClosedate}
		WHERE TD_CD = #{tdCd}
	</update>
	
</mapper>

